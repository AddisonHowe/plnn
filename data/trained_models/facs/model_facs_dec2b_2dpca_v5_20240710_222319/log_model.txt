__annotations__ : {'include_phi_bias': <class 'bool'>}
__doc__ : "DeepPhiPLNN(key, dtype=<class 'jax.numpy.float32'>, *, include_phi_bias=True, phi_hidden_dims=[16, 32, 32, 16], phi_hidden_acts='softplus', phi_final_act=None, phi_layer_normalize=False, **kwargs)"
__module__ : 'plnn.models.plnn_deep'
confine : True
confinement_factor : 0.1
dt0 : 0.005
include_phi_bias : False
include_tilt_bias : False
logsigma : Array(-3.91202301, dtype=float64)
model_type : 'deep_phi_plnn'
ncells : 50
ndims : 2
nparams : 2
nsigparams : 4
nsigs : 2
phi_module : Sequential(
  layers=(
    Linear(
      weight=f64[16,2],
      bias=None,
      in_features=2,
      out_features=16,
      use_bias=False
    ),
    Lambda(fn=<wrapped function softplus>),
    Linear(
      weight=f64[32,16],
      bias=None,
      in_features=16,
      out_features=32,
      use_bias=False
    ),
    Lambda(fn=<wrapped function softplus>),
    Linear(
      weight=f64[32,32],
      bias=None,
      in_features=32,
      out_features=32,
      use_bias=False
    ),
    Lambda(fn=<wrapped function softplus>),
    Linear(
      weight=f64[16,32],
      bias=None,
      in_features=32,
      out_features=16,
      use_bias=False
    ),
    Lambda(fn=<wrapped function softplus>),
    Linear(
      weight=f64[1,16],
      bias=None,
      in_features=16,
      out_features=1,
      use_bias=False
    )
  )
)
sample_cells : False
sigma_init : 0.02
signal_type : 'sigmoid'
solver : 'heun'
tilt_module : Sequential(
  layers=(
    Linear(
      weight=f64[2,2],
      bias=None,
      in_features=2,
      out_features=2,
      use_bias=False
    ),
  )
)
vbt_tol : 1e-06
