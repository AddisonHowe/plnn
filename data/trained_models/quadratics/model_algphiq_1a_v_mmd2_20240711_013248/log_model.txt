__annotations__ : {'phi_module': <class 'plnn.models.algebraic_potentials.AbstractAlgebraicPotential'>, 'algebraic_phi_id': <class 'str'>, 'tilt_module': <class 'equinox._module.Module'>}
__doc__ : "AlgebraicPL(key, dtype=<class 'jax.numpy.float32'>, *, ndims=2, nparams=2, nsigs=2, sigma_init=0.01, phi_module=None, algebraic_phi_id=None, tilt_weights=None, tilt_bias=None, include_tilt_bias=False, phi_args={}, **kwargs)"
__module__ : 'plnn.models.algebraic_pl'
algebraic_phi_id : 'quadratic'
confine : False
confinement_factor : 1
dt0 : 0.1
include_tilt_bias : False
logsigma : Array(-2.99573227, dtype=float64)
model_type : 'algebraic_plnn'
ncells : 50
ndims : 2
nparams : 2
nsigparams : 4
nsigs : 2
phi_module : QuadraticPotential(ndims=2, id='quadratic', a=f64[], b=f64[])
sample_cells : True
sigma_init : 0.05
signal_type : 'sigmoid'
solver : 'heun'
tilt_module : Sequential(
  layers=(
    Linear(
      weight=f64[2,2],
      bias=None,
      in_features=2,
      out_features=2,
      use_bias=False
    ),
  )
)
vbt_tol : 1e-06
